<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>瑞濱 Rui-Bin——情感、文字與聲音的距離</title>
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <style>
        body {
            font-family: 'Georgia', serif;
            background: #0A1D2A;
            color: #d1ccbb;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            overflow-x: hidden;
        }

        .intro-container {
            position: fixed;
            width: 100vw;
            height: 100vh;
            background: black;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            z-index: 1000;
            opacity: 1;
            animation: fadeIn 2s ease-out forwards;
        }

        .intro-text {
            font-size: 36px;
            font-family: 'Georgia', serif;
            color: #d1ccbb;
            text-align: center;
            opacity: 0;
            animation: fadeInText 2s ease-out 0.5s forwards;
        }

        .enter-button {
            width: 125px;
            height: 50px;
            margin-top: 30px;
            font-size: 16px;
            background-color: #d1ccbb;
            color: #0A1D2A;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            opacity: 0;
            animation: fadeInButton 2s ease-out 1s forwards;
        }

        .enter-button:hover {
            background-color: #35287c;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes fadeInText {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes fadeInButton {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-out {
            animation: fadeOut 2s ease-out forwards;
        }

        @keyframes fadeOut {
            from { opacity: 1; }
            to { opacity: 0; }
        }

        .container-inner {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            text-align: center;
            flex-grow: 1;
            overflow: auto;
        }

        .header-image {
            width: 100%;
            height: auto;
            max-height: 200px;
            object-fit: cover;
        }

        h2, .engh2 {
            color: #d1ccbb;
        }

        .description, .engdescription {
            color: #c2c2c2;
        }

        .button-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }

        .audio-controls {
            background-color: rgb(25, 24, 32);
            border-radius: 10px;
            padding: 13px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .audio-image {
            width: 100%;
            height: auto;
            max-width: 292px;
            object-fit: cover;
            border-radius: 10px;
        }

        .progress-bar {
            width: 100%;
            height: 12px;
            border-radius: 7px;
            background-color: #ddd;
        }

        .button-row {
            display: flex;
            justify-content: center;
            gap: 8px;
            flex-wrap: wrap;
        }

        button, select {
            font-size: 16px;
            padding: 10px;
            border-radius: 10px;
        }

        .pagination {
            margin: 30px auto;
            display: flex;
            justify-content: center;
            gap: 20px;
        }

        .image-name {
            font-size: 18px;
            color: #dfdfdf;
            margin-top: 12px;
        }

        @media (max-width: 600px) {
            h2 {
                font-size: 26px;
            }

            .engh2, .description, .engdescription {
                font-size: 16px;
            }

            .button-row button, .button-row select {
                font-size: 14px;
                padding: 8px;
            }
        }
    </style>
</head>
<body>
    <div class="intro-container">
        <div class="intro-text">瑞濱 Rui-Bin</div>
        <div class="intro-text" style="font-size: 20px; margin-top: 10px;">情感、文字與聲音的距離</div>
        <button class="enter-button" onclick="enterSite()">開始探索</button>
    </div>

    <img src="header-image.jpg" alt="Header Image" class="header-image">

    <div class="container-inner" style="display: none;">
        <h2>瑞濱 Rui-Bin —— 情感、文字與聲音的距離</h2>
        <div class="engh2">Rui-Bin — The distance of Emotion, Words, and Sound</div>

        <div class="description">這裡是來自新北市瑞芳區瑞濱國小小朋友們的聲音，一起來聆聽他們天馬行空的創意和想說的話吧。</div>
        <div class="engdescription">Here are the voices of the children from Rui-Bin Elementary School in Ruifang District, New Taipei City. Let's listen to their boundless creativity and the thoughts they wish to share!</div>

        <div id="audio-container"></div>
        <div class="button-grid" id="button-container"></div>

        <div class="pagination">
            <button onclick="prevPage()">上一頁</button>
            <div id="page-info-display"></div>
            <button onclick="nextPage()">下一頁</button>
        </div>
    </div>

    <script>
        function enterSite() {
            document.querySelector('.intro-container').classList.add('fade-out');
            setTimeout(() => {
                document.querySelector('.intro-container').style.display = 'none';
                document.querySelector('.container-inner').style.display = 'block';
            }, 2000);
        }

        let currentPage = 1;
        const totalPages = 6;
        const audiosPerPage = 5;
        const speedLevels = [1, 1.25, 1.5, 2];

        function generateAudioElements() {
            const buttonContainer = document.getElementById("button-container");
            const pageInfoDisplay = document.getElementById("page-info-display");

            buttonContainer.innerHTML = "";
            const start = (currentPage - 1) * audiosPerPage + 1;
            const end = start + audiosPerPage;

            for (let i = start; i < end; i++) {
                const audio = new Audio(`audio${i}.mp3`);
                audio.id = `audio${i}`;
                document.body.appendChild(audio);

                const controlDiv = document.createElement("div");
                controlDiv.className = "audio-controls";

                const image = document.createElement("img");
                image.src = `audio${i}.jpg`;
                image.className = "audio-image";
                controlDiv.appendChild(image);

                const imageName = document.createElement("div");
                imageName.className = "image-name";
                imageName.textContent = `作品名稱 ${i}`;
                controlDiv.appendChild(imageName);

                const progressBar = document.createElement("input");
                progressBar.type = "range";
                progressBar.className = "progress-bar";
                progressBar.min = 0;
                progressBar.max = 100;
                progressBar.value = 0;
                progressBar.step = 1;
                progressBar.oninput = () => audio.currentTime = (audio.duration / 100) * progressBar.value;
                controlDiv.appendChild(progressBar);

                audio.addEventListener("timeupdate", () => progressBar.value = (audio.currentTime / audio.duration) * 100);

                const buttonRow = document.createElement("div");
                buttonRow.className = "button-row";

                const rewindBtn = document.createElement("button");
                rewindBtn.textContent = "⏮";
                rewindBtn.onclick = () => audio.currentTime -= 5;

                const playBtn = document.createElement("button");
                playBtn.textContent = "▶";
                playBtn.onclick = () => {
                    if (audio.paused) {
                        document.querySelectorAll("audio").forEach(a => a.pause());
                        audio.play();
                        playBtn.textContent = "⏸";
                    } else {
                        audio.pause();
                        playBtn.textContent = "▶";
                    }
                };

                const forwardBtn = document.createElement("button");
                forwardBtn.textContent = "⏭";
                forwardBtn.onclick = () => audio.currentTime += 5;

                const speedSelect = document.createElement("select");
                speedLevels.forEach(speed => {
                    const option = document.createElement("option");
                    option.value = speed;
                    option.textContent = `${speed}x`;
                    speedSelect.appendChild(option);
                });
                speedSelect.onchange = () => audio.playbackRate = speedSelect.value;

                buttonRow.append(rewindBtn, playBtn, forwardBtn, speedSelect);
                controlDiv.appendChild(buttonRow);
                buttonContainer.appendChild(controlDiv);
            }

            pageInfoDisplay.textContent = `第${currentPage}/${totalPages}頁`;
        }

        function prevPage() {
            if (currentPage > 1) {
                currentPage--;
                generateAudioElements();
            }
        }

        function nextPage() {
            if (currentPage < totalPages) {
                currentPage++;
                generateAudioElements();
            }
        }

        generateAudioElements();
    </script>
</body>
</html>
