<!DOCTYPE html>
<html lang="zh-TW">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />
<title>瑞濱 Rui-Bin——手機播放器分頁</title>
<style>
  /* Reset & 基本樣式 */
  * {
    box-sizing: border-box;
  }
  body, html {
    margin: 0; padding: 0; height: 100vh; width: 100vw;
    overflow-x: hidden;
    font-family: 'Arial', sans-serif;
    background: #0A1D2A;
    color: #d1ccbb;
  }

  /* 滑動容器 */
  .slider {
    display: flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    height: 100vh;
    width: 100vw;
  }

  /* 隱藏滾動條 */
  .slider::-webkit-scrollbar {
    display: none;
  }
  .slider {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
  }

  /* 單頁播放器 */
  .slide {
    scroll-snap-align: start;
    flex: none;
    width: 100vw;
    height: 100vh;
    padding: 20px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: rgb(10,29,42);
  }

  /* 大圖片 */
  .audio-image {
    width: 80vw;
    max-width: 350px;
    height: 80vw;
    max-height: 350px;
    border-radius: 15px;
    object-fit: cover;
    box-shadow: 0 4px 15px rgba(0,0,0,0.6);
    margin-bottom: 15px;
    transition: transform 0.3s ease;
  }
  .audio-image:hover {
    transform: scale(1.05);
  }

  /* 作品名稱 */
  .image-name {
    font-size: 22px;
    font-weight: bold;
    margin-bottom: 15px;
    color: #dfdfdf;
  }

  /* 進度條 */
  .progress-bar {
    width: 80vw;
    max-width: 350px;
    height: 14px;
    border-radius: 10px;
    -webkit-appearance: none;
    background: #444;
    margin-bottom: 25px;
  }
  .progress-bar::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 22px;
    height: 22px;
    background: #d1ccbb;
    border-radius: 50%;
    cursor: pointer;
    margin-top: -4px;
    box-shadow: 0 0 6px #d1ccbb;
  }
  .progress-bar::-moz-range-thumb {
    width: 22px;
    height: 22px;
    background: #d1ccbb;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 0 6px #d1ccbb;
  }

  /* 播放控制列 */
  .button-row {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px;
    width: 80vw;
    max-width: 350px;
  }

  button, select {
    border: none;
    background-color: #d1ccbb;
    color: #0A1D2A;
    font-size: 18px;
    padding: 10px 14px;
    border-radius: 12px;
    cursor: pointer;
    user-select: none;
    transition: background-color 0.3s ease;
  }
  button:hover, select:hover {
    background-color: #ecda89;
  }
  select {
    padding: 8px 12px;
    font-size: 17px;
  }

  /* 頁碼指示 */
  .page-indicator {
    position: fixed;
    bottom: 10px;
    width: 100%;
    text-align: center;
    font-size: 18px;
    color: #d1ccbb;
    font-weight: 600;
    user-select: none;
  }
</style>
</head>
<body>

<div class="slider" id="slider">
  <!-- 這裡用JS生成每個slide -->
</div>

<div class="page-indicator" id="page-indicator">第1頁 / 6頁</div>

<script>
  const totalPages = 6;
  const speedLevels = [1, 1.25, 1.5, 2];

  const slider = document.getElementById('slider');
  const pageIndicator = document.getElementById('page-indicator');

  // 動態建立播放器頁面
  for (let i = 1; i <= totalPages; i++) {
    const slide = document.createElement('div');
    slide.className = 'slide';

    // 圖片
    const img = document.createElement('img');
    img.src = `audio${i}.jpg`;
    img.alt = `作品名稱 ${i}`;
    img.className = 'audio-image';

    // 作品名稱
    const imageName = document.createElement('div');
    imageName.className = 'image-name';
    imageName.textContent = `作品名稱 ${i}`;

    // audio 元素
    const audio = document.createElement('audio');
    audio.id = `audio${i}`;
    audio.src = `audio${i}.mp3`;
    audio.preload = "metadata";

    // 進度條
    const progressBar = document.createElement('input');
    progressBar.type = 'range';
    progressBar.className = 'progress-bar';
    progressBar.min = 0;
    progressBar.max = 100;
    progressBar.value = 0;
    progressBar.step = 1;

    // 控制按鈕列
    const buttonRow = document.createElement('div');
    buttonRow.className = 'button-row';

    const rewindBtn = document.createElement('button');
    rewindBtn.textContent = '⏮';
    rewindBtn.onclick = () => skipAudio(audio.id, -5);

    const playBtn = document.createElement('button');
    playBtn.textContent = '▶';
    playBtn.id = `btn-${audio.id}`;
    playBtn.onclick = () => togglePlay(audio.id, playBtn);

    const forwardBtn = document.createElement('button');
    forwardBtn.textContent = '⏭';
    forwardBtn.onclick = () => skipAudio(audio.id, 5);

    const speedSelect = document.createElement('select');
    speedLevels.forEach(speed => {
      const option = document.createElement('option');
      option.value = speed;
      option.textContent = `${speed}x`;
      speedSelect.appendChild(option);
    });
    speedSelect.onchange = () => adjustSpeed(audio.id, speedSelect);

    // 插入控制按鈕
    buttonRow.appendChild(rewindBtn);
    buttonRow.appendChild(playBtn);
    buttonRow.appendChild(forwardBtn);
    buttonRow.appendChild(speedSelect);

    // 組合 slide
    slide.appendChild(img);
    slide.appendChild(imageName);
    slide.appendChild(audio);
    slide.appendChild(progressBar);
    slide.appendChild(buttonRow);

    slider.appendChild(slide);

    // 事件監聽：更新進度條
    audio.addEventListener('timeupdate', () => {
      if(audio.duration) {
        progressBar.value = (audio.currentTime / audio.duration) * 100;
      }
    });

    // 用滑桿調整播放位置
    progressBar.addEventListener('input', () => {
      if(audio.duration) {
        audio.currentTime = (progressBar.value / 100) * audio.duration;
      }
    });
  }

  // 播放控制函數
  function togglePlay(audioId, button) {
    const audio = document.getElementById(audioId);
    const allAudios = document.querySelectorAll('audio');

    // 暫停其他音檔
    allAudios.forEach(aud => {
      if (aud !== audio && !aud.paused) {
        aud.pause();
        const btn = document.getElementById(`btn-${aud.id}`);
        if (btn) btn.textContent = '▶';
      }
    });

    if (audio.paused) {
      audio.play();
      button.textContent = '⏸';
    } else {
      audio.pause();
      button.textContent = '▶';
    }
  }

  function skipAudio(audioId, seconds) {
    const audio = document.getElementById(audioId);
    audio.currentTime = Math.min(Math.max(0, audio.currentTime + seconds), audio.duration || 0);
  }

  function adjustSpeed(audioId, select) {
    const audio = document.getElementById(audioId);
    audio.playbackRate = parseFloat(select.value);
  }

  // 更新頁碼指示
  slider.addEventListener('scroll', () => {
    const scrollLeft = slider.scrollLeft;
    const pageWidth = window.innerWidth;
    const pageNum = Math.round(scrollLeft / pageWidth) + 1;
    pageIndicator.textContent = `第${pageNum}頁 / ${totalPages}頁`;
  });

</script>

</body>
</html>
